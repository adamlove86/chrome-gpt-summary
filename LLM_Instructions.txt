# Chrome Summariser Plugin

The plugin "Summarise with ChatGPT" is a Chrome extension that summarises the content of web pages, YouTube transcripts, or selected text using OpenAI's chat models, including GPT-4o-mini or any other OpenAI chat model specified by the user in the settings. It offers customizable prompts and allows the user to summarise content directly from the browser by selecting the "Summarise with ChatGPT" option from the right-click context menu.

The plugin consists of several components:

1. **Context Menu Integration:**
   - When the user right-clicks on a webpage, selection, or link, a custom context menu item titled "Summarise with ChatGPT" appears.
   - If the user selects this option, the plugin identifies whether to summarise the entire page content, a YouTube transcript, or a selected portion of the text.

2. **Background Processing (background.js):**
   - The background script (now a service worker in Manifest V3) handles the context menu clicks. It listens for the context menu action and determines if the summarisation request is for a webpage, a selected text, or a YouTube video.
   - Based on the type of content, it injects the appropriate content script (for text extraction) or sends a message to extract YouTube transcripts.

3. **Content Extraction:**
   - **For Web Pages**: A content script runs in the context of the active webpage to gather all visible text, excluding hidden or non-visible elements. It also tries to extract metadata like the page's title and the published date.
   - **For YouTube Videos**: It extracts the transcript if available and retrieves the video title and published date. It waits for the transcript to load and sends the extracted transcript back to the background script.
   - **For Selected Text**: The selected text is directly passed to the background script for summarisation.

4. **Summarisation Process:**
   - Once the content (text, YouTube transcript, or selection) is ready, the plugin interacts with OpenAI's API using a chat model defined by the user in the settings. By default, the plugin uses GPT-4o-mini but can be configured to use any model such as GPT-4, GPT-3.5-turbo, etc.
   - The API uses customizable prompts, which the user can configure in the options page. For instance, the YouTube prompt might request the API to break down the transcript into logical sections with appropriate headings, while the text prompt would be tailored to summarise articles with clear sections and an overview.
   - The user can configure parameters such as:
     - API Key
     - Chat model (e.g., GPT-4o-mini, GPT-3.5-turbo, GPT-4)
     - Maximum tokens for the summary
     - Temperature (controls the creativity of the output)
     - Custom text and YouTube prompts

5. **Displaying the Summary:**
   - The summary is displayed in a new browser tab. The tab title is set to "Page Title - Summary" (for YouTube, this is "Video Title - Summary").
   - The summary includes metadata such as:
     - The page or video title
     - The original length of the content (word count)
     - The date the content was published (for articles and videos)
     - The site the content was extracted from (e.g., the domain name)
   - The summary is presented with clear formatting:
     - **Bold headings** for section titles.
     - **Italic** for subsections or additional points.
     - Markdown-like syntax is supported, converting custom markdown tags into coloured text (red for critical points, blue for key definitions, green for positive aspects, and orange for cautionary notes).

6. **Customization and Options (options.html and options.js):**
   - Users can visit the options page of the extension to configure their settings.
   - These settings include:
     - API key for accessing OpenAI's models.
     - Custom prompts for summarising YouTube transcripts or text-based articles.
     - Maximum token length for the summaries.
     - Temperature (to adjust response variability and creativity).
     - The ability to select which OpenAI chat model to use (e.g., GPT-4o-mini, GPT-3.5-turbo, GPT-4).
     - Debug mode (which enables more verbose logging and alerts for errors).

7. **Error Handling:**
   - If errors occur during the summarisation process (e.g., incorrect API key, missing data, or timeouts when retrieving YouTube transcripts), the plugin alerts the user and logs detailed error information in the console (if debugging is enabled).

8. **Permissions and Manifest (manifest.json):**
   - The plugin requires permissions to access active tabs, read and manipulate web pages, interact with context menus, and store settings via Chrome's storage API.
   - It also requires permission to make requests to external servers (e.g., OpenAI's API) to perform summarisation tasks.

9. **Word Count and Metadata Extraction:**
   - The plugin calculates the word count of the original text directly in the plugin (not relying on the OpenAI models).
   - It also extracts the published date from meta tags or specific HTML elements if available.

In summary, this plugin allows users to quickly summarise any webpage, YouTube transcript, or selected text with OpenAI's chat models. The model used can be selected by the user, and the summarisation process is fully customizable. Metadata like the page title, word count, and publication date are displayed alongside the summary.
